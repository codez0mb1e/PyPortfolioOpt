name: PyPorfolioOpt Build Pipeline

on:
  workflow_dispatch:
  pull_request:
  push:
    branches: [ "master" ]

permissions:
  contents: read

jobs:
  linting:

    name: "Lint | Python ${{ matrix.python-version }}"

    runs-on: ubuntu-latest

    env:
      MPLBACKEND: Agg  # https://github.com/orgs/community/discussions/26434

    strategy:
      matrix:
        python-version: [ "3.12", "3.13" ]
      fail-fast: false

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Upgrade pip
      run: python -m pip install --upgrade pip

    - name: Install CI pipeline dependencies
      run: pip install --upgrade -r requirements-dev.txt

    - name: Install application dependencies
      run: pip install -r requirements.txt

    - name: Flake analysing
      run: |
        pflake8 --version
        # pflake8 --show-source --statistics .

    - name: iSort analysing
      run: |
        isort --version
        # isort --diff --check .

    - name: Black analysing
      run: |
        black --version
        # black --diff --check .

    - name: MyPy analysing
      run: |
        mypy --version
        # mypy pypfopt

  test:
    name: "Tests | Python ${{ matrix.python-version }}"

    needs:
      - linting

    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: [ "3.12", "3.13" ]
      fail-fast: false

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Upgrade pip
      run: python -m pip install --upgrade pip

    - name: Install CI pipeline dependencies
      run: pip install --upgrade -r requirements-dev.txt

    - name: Install application dependencies
      run: pip install -r requirements.txt

    - name: Run Unit tests
      run: |
        pytest --version
        pytest --doctest-modules --junitxml=junit/unit-tests-results-${{ matrix.python-version }}.xml \
          --cov=. --cov-report=xml tests
